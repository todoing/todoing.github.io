import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as i,d as s,e as n,b as e,f as t,r as d}from"./app.f66cef50.js";const c={},p=t(`<h2 id="安装-scoop" tabindex="-1"><a class="header-anchor" href="#安装-scoop" aria-hidden="true">#</a> 安装 scoop</h2><ol><li>用管理员模式打开 powershell，<code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser</code></li><li>改变 scoop 安装目录</li></ol><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token comment"># 其中目录\`D:\\__Scoop\`可根据自己的情况修改。</span>
<span class="token variable">$env</span>:SCOOP=<span class="token string">&#39;D:\\__Scoop&#39;</span>
<span class="token namespace">[Environment]</span>::SetEnvironmentVariable<span class="token punctuation">(</span><span class="token string">&#39;SCOOP&#39;</span><span class="token punctuation">,</span> <span class="token variable">$env</span>:SCOOP<span class="token punctuation">,</span> <span class="token string">&#39;User&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 进行安装(如果安装卡住，尝试运行终端管理员模式或者关闭管理员模式)</span>
<span class="token function">Invoke-Expression</span> <span class="token punctuation">(</span><span class="token function">New-Object</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>WebClient<span class="token punctuation">)</span><span class="token punctuation">.</span>DownloadString<span class="token punctuation">(</span><span class="token string">&#39;https://get.scoop.sh&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 或者</span>
<span class="token function">iwr</span> <span class="token operator">-</span>useb get<span class="token punctuation">.</span>scoop<span class="token punctuation">.</span>sh <span class="token punctuation">|</span> <span class="token function">iex</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>-- (最好设置好<code>git config --global http.sslVerify false</code>,不然 scoop 有时安装更新之类的行为可能会报错)</p><h2 id="重装系统快速更新" tabindex="-1"><a class="header-anchor" href="#重装系统快速更新" aria-hidden="true">#</a> 重装系统快速更新</h2><ol><li><p>添加环境变量</p></li><li><p>根据 scoop list 的应用信息 进行重安装 <code>scoop list | sed &quot;/Installed/d;/---/d;/Name/d&quot; | egrep -o &quot;^[0-z][0-z.-]{1,} &quot; | tr -s &quot;\\n&quot; &quot; &quot; &gt; ./测试.txt &amp;&amp; scoop uninstall $(cat ./测试.txt) &amp;&amp; scoop install $(cat ./测试.txt) &amp;&amp; scoop list &amp;&amp; rm ./测试.txt</code></p></li></ol><h1 id="配置-powershell-终端-zsh" tabindex="-1"><a class="header-anchor" href="#配置-powershell-终端-zsh" aria-hidden="true">#</a> 配置 powershell --&gt; 终端 zsh</h1><h2 id="powershell" tabindex="-1"><a class="header-anchor" href="#powershell" aria-hidden="true">#</a> powershell</h2><ol><li>微软商店安装 <code>powershell</code></li><li>安装 <code>oh-my-posh</code>和 <code>posh-git</code></li><li>确保 <code>scoop</code> 已经安装<code>z.lua</code></li></ol><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>scoop install oh-my-posh<span class="token punctuation">;</span>

<span class="token function">Install-Module</span> PSColor<span class="token punctuation">;</span> <span class="token comment"># 安装文件着色模块</span>
<span class="token function">Install-Module</span> <span class="token function">Get-ChildItemColor</span> <span class="token comment"># 用于自定义颜色的模块</span>

<span class="token comment"># 写入 powershell配置文件</span>
<span class="token function">cat</span> D:\\computer_config\\Terminal_About\\powershell_posh\\Microsoft<span class="token punctuation">.</span>PowerShell_profile<span class="token punctuation">.</span>ps1 &gt; <span class="token variable">$PROFILE</span><span class="token punctuation">;</span>

<span class="token comment"># 添加主题文件</span>
<span class="token function">cat</span> <span class="token string">&quot;D:\\computer_config\\Terminal_About\\powershell_posh\\_diy_powerlevel10k.json&quot;</span> &gt; <span class="token string">&quot;D:\\__Scoop\\apps\\oh-my-posh\\current\\themes\\_diy_powerlevel10k.json&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装-zsh" tabindex="-1"><a class="header-anchor" href="#安装-zsh" aria-hidden="true">#</a> 安装 zsh</h2>`,11),r=s("li",null,[s("p",null,[n("安装 git(不要用"),s("code",null,"scoop"),n("安装"),s("code",null,"git"),n("，后续会出现无法解决的乱码)")])],-1),u=s("code",null,"zsh-5.8-5-x86_64.pkg.tar.zst",-1),h=s("code",null,"zsh-xxx-x86_64.pkg.tar.zst",-1),m={href:"https://packages.msys2.org/package/zsh?repo=msys&variant=x86_64",target:"_blank",rel:"noopener noreferrer"},v=s("li",null,[s("p",null,[n("解压后你的文件中应该包含 "),s("code",null,"etc"),n(" 和 "),s("code",null,"usr"),n(" 类似字眼。将解压出来的所有文件，包含刚刚说的文件。复制到 git-bash 安装的根目录。可能会提示冲突，选择覆盖文件即可。")])],-1),k={href:"https://link.juejin.cn?target=https%3A%2F%2Fpeazip.github.io%2F",target:"_blank",rel:"noopener noreferrer"},b=t(`<h2 id="安装-oh-my-zsh" tabindex="-1"><a class="header-anchor" href="#安装-oh-my-zsh" aria-hidden="true">#</a> 安装 oh-my-zsh</h2><h3 id="第一步" tabindex="-1"><a class="header-anchor" href="#第一步" aria-hidden="true">#</a> 第一步</h3><p>如果想要默认使用 <code>zsh</code>。而不进入 <code>bash</code>。可以在 <code>.bashrc</code> 加上下面代码。(即使 git 由 scoop 安装， .bashrc 也要创建在 ~目录下)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-t</span> <span class="token number">1</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">exec</span> <span class="token function">zsh</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="下载-oh-my-zsh-下载到-oh-my-zsh" tabindex="-1"><a class="header-anchor" href="#下载-oh-my-zsh-下载到-oh-my-zsh" aria-hidden="true">#</a> 下载 oh-my-zsh，下载到 <code>~/.oh-my-zsh</code></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 命令可能随更新改变，详情查看官网(https://ohmyz.sh/#install)</span>
<span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class="token variable">)</span></span>&quot;</span>

<span class="token comment"># 国内镜像</span>
<span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置主题-powerlevel10k" tabindex="-1"><a class="header-anchor" href="#配置主题-powerlevel10k" aria-hidden="true">#</a> 配置主题 powerlevel10k</h3><ul><li><p>安装推荐字体，并设置为终端字体(不装会有符号缺失导致乱码问题，文件目录里有保存)</p></li><li><p>安装主题 <code>git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git \${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k</code></p></li><li><p>在 <code>.zshrc</code>文件中设置主题 <code>ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;</code></p></li><li><p>启动终端，跟着提示进行配置即可（命令行键入<code>p10k configure</code>可以再次通过提示进行配置）</p><ul><li>如果提示配置符号显示乱码，检查终端字体设置，将其改为安装的推荐字体。</li><li>再检查 json 文件里的字体设置，如果有，将其删除</li></ul></li></ul><h3 id="主题、插件定制" tabindex="-1"><a class="header-anchor" href="#主题、插件定制" aria-hidden="true">#</a> 主题、插件定制</h3><ol><li>在 <code>~/.zshrc</code> 中键入</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">ZSH_THEME</span><span class="token operator">=</span><span class="token string">&quot;random&quot;</span>

<span class="token assign-left variable">plugins</span><span class="token operator">=</span><span class="token punctuation">(</span>
  <span class="token function">git</span>
  z <span class="token punctuation">(</span>快速跳转路径 z path,如果有不想要的路径,使用 z <span class="token parameter variable">-x</span> path<span class="token punctuation">)</span>
  <span class="token comment"># bundler</span>
  <span class="token comment"># dotenv</span>
  <span class="token comment"># macos</span>
  <span class="token comment"># rake</span>
  <span class="token comment"># rbenv</span>
  <span class="token comment"># ruby</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>安装 语法高亮 <code>zsh-syntax-highlighting</code> ：高亮代码提示，更直观的知道命令是否有输入错误</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/zsh-users/zsh-syntax-highlighting.git
<span class="token builtin class-name">echo</span> <span class="token string">&quot;source <span class="token variable">\${(q-)PWD}</span>/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">\${ZDOTDIR<span class="token operator">:-</span>$HOME}</span>/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>安装 自动补全/提示</li></ol><p><code>zsh-users/zsh-autosuggestions</code></p><p>在历史指令中找到与当前输入指令匹配的记录，并高亮显示，如果想直接使用，可以直接通过 右方向键 补全。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/zsh-users/zsh-autosuggestions <span class="token variable">\${ZSH_CUSTOM<span class="token operator">:-</span>~<span class="token operator">/</span>.oh-my-zsh<span class="token operator">/</span>custom}</span>/plugins/zsh-autosuggestions
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 <code>plugins</code> 中添加</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">plugins</span><span class="token operator">=</span><span class="token punctuation">(</span>
    <span class="token comment">#这里的插件放置~/.oh-my-zsh/custom/plugins目录下，然后在plugins后面追加插件名字即可</span>
    <span class="token comment"># other plugins...</span>
    zsh-autosuggestions
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设置-终端样式" tabindex="-1"><a class="header-anchor" href="#设置-终端样式" aria-hidden="true">#</a> 设置 终端样式</h3><ol><li>改变终端显示大小 <ol><li>在配置 json 文件中，</li></ol></li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;actions&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token comment">//...],</span>
<span class="token property">&quot;initialCols&quot;</span><span class="token operator">:</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token comment">// 列(121)，行(32)</span>
<span class="token property">&quot;initialRows&quot;</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
<span class="token property">&quot;initialPosition&quot;</span><span class="token operator">:</span> <span class="token string">&quot;-1,-1&quot;</span><span class="token punctuation">,</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装-zinit" tabindex="-1"><a class="header-anchor" href="#安装-zinit" aria-hidden="true">#</a> 安装 <code>zinit</code></h3><ol><li><code>bash -c &quot;$(curl --fail --show-error --silent --location https://raw.githubusercontent.com/zdharma-continuum/zinit/HEAD/scripts/install.sh)&quot;</code></li></ol><h1 id="npm-配置" tabindex="-1"><a class="header-anchor" href="#npm-配置" aria-hidden="true">#</a> npm 配置</h1><ol><li>安装 <code>nrm</code> 设置镜像 <code>npm i -g nrm</code></li><li><code>nrm use taobao</code></li><li><code>npm i -g http-server</code></li></ol><h1 id="scoop-常用软件" tabindex="-1"><a class="header-anchor" href="#scoop-常用软件" aria-hidden="true">#</a> scoop 常用软件</h1><table><thead><tr><th>软件名</th><th>版本</th><th>bucket</th><th>安装时间</th></tr></thead><tbody><tr><td>7zip</td><td>22.01</td><td>main</td><td>2022-12-03 00:15:56</td></tr><tr><td>aria2</td><td>1.36.0-1</td><td>main</td><td>2022-12-03 00:13:04</td></tr><tr><td>dark</td><td>3.11.2</td><td>main</td><td>2022-12-03 00:25:36</td></tr><tr><td>freecommander</td><td>2022.861</td><td>extras</td><td>2022-12-03 19:29:45</td></tr><tr><td>fzf 0.35.1</td><td>main</td><td>2022-12-03 00:16:13</td><td></td></tr><tr><td>googlechrome</td><td>107.0.5304.107</td><td>extras</td><td>2022-12-03 00:14:11</td></tr><tr><td>innounp</td><td>0.50</td><td>main</td><td>2022-12-03 01:29:01</td></tr><tr><td>lua</td><td>5.4.2</td><td>main</td><td>2022-12-03 00:17:04</td></tr><tr><td>miktex</td><td>22.10</td><td>main</td><td>2022-12-03 00:18:24</td></tr><tr><td>nvm</td><td>1.1.10</td><td>main</td><td>2022-12-03 02:23:42</td></tr><tr><td>pandoc</td><td>2.19.2</td><td>main</td><td>2022-12-03 00:15:09</td></tr><tr><td>python 3.11.0</td><td>main</td><td>2022-12-03 00:26:45</td><td></td></tr><tr><td>steampp</td><td>2.8.4</td><td>dorado</td><td>2022-12-03 00:07:43</td></tr><tr><td>sudo</td><td>0.2020.01.26</td><td>main</td><td>2022-12-02 04:01:58</td></tr><tr><td>vscode</td><td>1.73.1</td><td>extras</td><td>2022-12-02 22:57:06</td></tr><tr><td>wechat</td><td>3.8.0.41</td><td>extras</td><td>2022-12-03 17:22:07</td></tr><tr><td>z.lua</td><td>1.8.16</td><td>main</td><td>2022-12-03 00:17:04</td></tr></tbody></table>`,28);function g(f,z){const a=d("ExternalLinkIcon");return l(),i("div",null,[p,s("ul",null,[r,s("li",null,[s("p",null,[n("下载 "),u,n(" 文件。5.8-5 是版本号，当你看到这配文章的时候版本号可能已经发生改变，所以你只需要下载 "),h,n(" 即可。("),s("a",m,[n("安装包地址"),e(a)]),n(")")])]),v,s("li",null,[s("p",null,[n("这里推荐使用 "),s("a",k,[n("peazip.github.io/"),e(a)]),n(" 进行解压。当然如果你有其他的解压工具能解压也行。")])])]),b])}const y=o(c,[["render",g],["__file","0.terminal_init.html.vue"]]);export{y as default};
