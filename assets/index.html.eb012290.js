import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,d as n,e as s,b as t,f as e,r as l}from"./app.4b209731.js";const i={},u=n("h2",{id:"\u5B89\u88C5-typescript",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5B89\u88C5-typescript","aria-hidden":"true"},"#"),s(" \u5B89\u88C5 Typescript")],-1),r={href:"https://www.typescriptlang.org/zh/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/nvm-sh/nvm",target:"_blank",rel:"noopener noreferrer"},d=e(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>// \u5B89\u88C5
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> typescript
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>// \u67E5\u770B tsc \u7248\u672C
tsc <span class="token parameter variable">-v</span>
// \u7F16\u8BD1 ts \u6587\u4EF6
tsc fileName.ts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,3),m={id:"\u539F\u59CB\u6570\u636E\u7C7B\u578B",tabindex:"-1"},v=n("a",{class:"header-anchor",href:"#\u539F\u59CB\u6570\u636E\u7C7B\u578B","aria-hidden":"true"},"#",-1),b={href:"https://www.typescriptlang.org/docs/handbook/basic-types.html#boolean",target:"_blank",rel:"noopener noreferrer"},g=e(`<details class="custom-container details"><summary>\u4E03\u5927\u7C7B\u578B</summary><ul><li>Boolean</li><li>Null</li><li>Undefined</li><li>Number</li><li>BigInt</li><li>String</li><li>Symbol</li></ul></details><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// boolean</span>
<span class="token keyword">let</span> isDone<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

<span class="token comment">// number</span>
<span class="token comment">// es6 \u8FD8\u652F\u6301 2\u8FDB\u5236 \u548C 8\u8FDB\u5236</span>
<span class="token keyword">let</span> age<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> binaryNumber<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0b1111</span><span class="token punctuation">;</span>

<span class="token comment">// string</span>
<span class="token keyword">let</span> firstName<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6A21\u677F\u5B57\u7B26\u4E32</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">let</span> message<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;\u666E\u901A\u5B57\u7B26\u4E32&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// undefined null</span>
<span class="token keyword">let</span> u<span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> n<span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token comment">// \u6CE8\u610F undefined \u548C null \u662F\u6240\u6709\u7C7B\u578B\u7684\u5B50\u7C7B\u578B</span>
<span class="token comment">// \u4E5F\u5C31\u662F\u8BF4 undefined \u7C7B\u578B\uFF0C\u53EF\u4EE5\u8D4B\u503C\u7ED9 number \u7C7B\u578B</span>
<span class="token keyword">let</span> num<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,3),h={href:"https://www.typescriptlang.org/docs/handbook/basic-types.html#any",target:"_blank",rel:"noopener noreferrer"},y=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// any \u7C7B\u578B</span>
<span class="token comment">// \u5C11\u7528\uFF0C\u4E0D\u7136\u5C31\u6210\u4E86 AnyScript \u4E86</span>

<span class="token keyword">let</span> notSure<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
notSure <span class="token operator">=</span> <span class="token string">&quot;maybe it&#39;s a string&quot;</span><span class="token punctuation">;</span>
notSure <span class="token operator">=</span> <span class="token string">&quot;boolean&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// \u5728\u4EFB\u610F\u503C\u4E0A\u8BBF\u95EE\u4EFB\u4F55\u5C5E\u6027\u90FD\u662F\u5141\u8BB8\u7684:</span>
notSure<span class="token punctuation">.</span>myName<span class="token punctuation">;</span>
<span class="token comment">// \u4E5F\u5141\u8BB8\u8C03\u7528\u4EFB\u4F55\u65B9\u6CD5:</span>
notSure<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),w={id:"array-\u548C-tuple",tabindex:"-1"},f=n("a",{class:"header-anchor",href:"#array-\u548C-tuple","aria-hidden":"true"},"#",-1),_={href:"https://www.typescriptlang.org/docs/handbook/basic-types.html#array",target:"_blank",rel:"noopener noreferrer"},q=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Array</span>
<span class="token keyword">let</span> arrOfNumbers<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

arrOfNumbers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// success</span>
arrOfNumbers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error</span>

<span class="token comment">// Tuple</span>
<span class="token keyword">let</span> user<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// \u5C11\u5199\u591A\u5199\u90FD\u4F1A\u62A5\u9519</span>
user <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;bbb&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,2),x={id:"interface-\u63A5\u53E3",tabindex:"-1"},T=n("a",{class:"header-anchor",href:"#interface-\u63A5\u53E3","aria-hidden":"true"},"#",-1),S={href:"https://www.typescriptlang.org/docs/handbook/interfaces.html",target:"_blank",rel:"noopener noreferrer"},I=e(`<ul><li>Duck Typing \u6982\u5FF5: <blockquote><p>\u5982\u679C\u67D0\u4E2A\u4E1C\u897F\u957F\u5F97\u50CF\u9E2D\u5B50\uFF0C\u50CF\u9E2D\u5B50\u4E00\u6837\u6E38\u6CF3\uFF0C\u560E\u560E\u53EB\uFF0C\u90A3\u5B83\u5C31\u53EF\u4EE5\u88AB\u770B\u6210\u662F\u4E00\u53EA\u9E2D\u5B50</p></blockquote></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u63A5\u53E3 Person</span>
<span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token keyword">readonly</span> id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u53EA\u8BFB</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u53EF\u9009</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7EA6\u675F test \u7684\u7C7B\u578B</span>
<span class="token keyword">let</span> test<span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&quot;doing&quot;</span><span class="token punctuation">,</span>
    id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
test<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">9277</span><span class="token punctuation">;</span> <span class="token comment">// error,\u53EA\u8BFB\u4E0D\u53EF\u66F4\u6539</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),N={id:"\u51FD\u6570",tabindex:"-1"},D=n("a",{class:"header-anchor",href:"#\u51FD\u6570","aria-hidden":"true"},"#",-1),P={href:"https://www.typescriptlang.org/docs/handbook/functions.html",target:"_blank",rel:"noopener noreferrer"},L=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u57FA\u7840\u5199\u6CD5\uFF0C\u53EF\u9009\u53C2\u6570</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> z<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> z <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> x <span class="token operator">+</span> y <span class="token operator">+</span> z<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u51FD\u6570\u672C\u8EAB\u7684\u7C7B\u578B</span>
<span class="token keyword">const</span> <span class="token function-variable function">add2</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> z<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span> <span class="token operator">=</span> add<span class="token punctuation">;</span>

<span class="token comment">// interface \u63CF\u8FF0\u51FD\u6570\u7C7B\u578B</span>
<span class="token keyword">interface</span> <span class="token class-name">ISum</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> sum<span class="token operator">:</span> <span class="token function-variable function">ISum</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">const</span> sum2 <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7C7B\u578B\u63A8\u8BBA-\u8054\u5408\u7C7B\u578B-\u7C7B\u578B\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u63A8\u8BBA-\u8054\u5408\u7C7B\u578B-\u7C7B\u578B\u65AD\u8A00" aria-hidden="true">#</a> \u7C7B\u578B\u63A8\u8BBA\uFF0C\u8054\u5408\u7C7B\u578B\uFF0C\u7C7B\u578B\u65AD\u8A00</h2>`,2),O={href:"https://www.typescriptlang.org/docs/handbook/type-inference.html",target:"_blank",rel:"noopener noreferrer"},A={href:"https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html#union-types",target:"_blank",rel:"noopener noreferrer"},B=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> numberOrString<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token comment">// \u5F53 TypeScript \u4E0D\u786E\u5B9A\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\u7684\u53D8\u91CF\u662F\u54EA\u4E00\u4E2A\u7C7B\u578B\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u53EA\u80FD\u8BBF\u95EE\u6B64\u8054\u5408\u7C7B\u578B\u7684\u6240\u6709\u7C7B\u578B\u91CC\u5171\u6709\u7684\u5C5E\u6027\u6216\u65B9\u6CD5</span>
numberOrString<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
numberOrString<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),E={href:"https://www.typescriptlang.org/docs/handbook/basic-types.html#type-assertions",target:"_blank",rel:"noopener noreferrer"},R=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u4F7F\u7528 as</span>
<span class="token keyword">function</span> <span class="token function">getLength</span><span class="token punctuation">(</span>input<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> str <span class="token operator">=</span> input <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token builtin">number</span> <span class="token operator">=</span> input <span class="token keyword">as</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token builtin">number</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u975E\u7A7A\u65AD\u8A00 !</span>

test<span class="token punctuation">.</span>value<span class="token operator">!</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),U={href:"https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types",target:"_blank",rel:"noopener noreferrer"},W=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// TypeScript \u5728\u4E0D\u540C\u7684\u6761\u4EF6\u5206\u652F\u91CC\u9762\uFF0C\u667A\u80FD\u7684\u7F29\u5C0F\u4E86\u8303\u56F4 \uFF0C\u8FD9\u6837\u6211\u4EEC\u4EE3\u7801\u51FA\u9519\u7387\u5C31\u5927\u5927\u964D\u4F4E\u4E86</span>
<span class="token keyword">function</span> <span class="token function">getLength</span><span class="token punctuation">(</span>input<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> input <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> input<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> input<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),C={id:"class-\u7C7B",tabindex:"-1"},M=n("a",{class:"header-anchor",href:"#class-\u7C7B","aria-hidden":"true"},"#",-1),j={href:"https://www.typescriptlang.org/docs/handbook/classes.html",target:"_blank",rel:"noopener noreferrer"},z=e(`<details class="custom-container details"><summary>\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u7684\u4E09\u5927\u7279\u70B9</summary><ul><li><p><strong>\u5C01\u88C5(Encapsulation)</strong>: \u5C06\u5BF9\u6570\u636E\u7684\u64CD\u4F5C\u7EC6\u8282\u9690\u85CF\u8D77\u6765\uFF0C\u53EA\u66B4\u9732\u5BF9\u5916\u7684\u63A5\u53E3\u3002\u5916\u754C\u8C03\u7528\u7AEF\u4E0D\u9700\u8981\uFF08\u4E5F\u4E0D\u53EF\u80FD\uFF09\u77E5\u9053\u7EC6\u8282\uFF0C\u5C31\u80FD\u901A\u8FC7\u5BF9\u5916\u63D0\u4F9B\u7684\u63A5\u53E3\u6765\u8BBF\u95EE\u8BE5\u5BF9\u8C61</p></li><li><p><strong>\u7EE7\u627F(Inheritance)</strong>: \u5B50\u7C7B\u7EE7\u627F\u7236\u7C7B\uFF0C\u5B50\u7C7B\u9664\u4E86\u62E5\u6709\u7236\u7C7B\u7684\u6240\u6709\u7279\u6027\u5916\uFF0C\u8FD8\u6709\u4E00\u4E9B\u66F4\u5177\u4F53\u7684\u7279\u6027</p></li><li><p><strong>\u591A\u6001(Polymorphism)</strong>: \u7531\u7EE7\u627F\u800C\u4EA7\u751F\u4E86\u76F8\u5173\u7684\u4E0D\u540C\u7684\u7C7B\uFF0C\u5BF9\u540C\u4E00\u4E2A\u65B9\u6CD5\u53EF\u4EE5\u6709\u4E0D\u540C\u7684\u54CD\u5E94</p></li></ul></details><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token comment">// name: string;</span>
    <span class="token comment">// constructor(name: string) {</span>
    <span class="token comment">//     this.name = name;</span>
    <span class="token comment">// }</span>
    <span class="token comment">// \u901A\u8FC7 public \u7B80\u5199</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token keyword">public</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is running</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> cat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&quot;lily&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cat<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7EE7\u627F\u7684\u7279\u6027</span>
<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token function">bark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is barking</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> kk <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token string">&quot;kk&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kk<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7EE7\u627F\u800C\u6765\u7684\u65B9\u6CD5</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kk<span class="token punctuation">.</span><span class="token function">bark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u91CD\u5199\u6784\u9020\u51FD\u6570</span>
<span class="token comment">// \u6CE8\u610F\u6742\u5B50\u7C7B\u7684\u6784\u9020\u51FD\u6570\u4E2D\uFF0C\u5FC5\u987B\u4F7F\u7528 super \u8C03\u7528\u7236\u7C7B\u7684\u65B9\u6CD5</span>
<span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u91CD\u5199\u6784\u9020\u51FD\u6570 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> cc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token string">&quot;cc&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cc<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),V={href:"https://www.typescriptlang.org/docs/handbook/classes.html#public-private-and-protected-modifiers",target:"_blank",rel:"noopener noreferrer"},$=n("ul",null,[n("li",null,[n("code",null,"public"),s(" \u4FEE\u9970\u7684\u5C5E\u6027\u6216\u65B9\u6CD5\u662F\u516C\u6709\u7684\uFF0C\u53EF\u4EE5\u5728\u4EFB\u4F55\u5730\u65B9\u88AB\u8BBF\u95EE\u5230\uFF0C\u9ED8\u8BA4\u6240\u6709\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\u90FD\u662F public \u7684")]),n("li",null,[n("code",null,"private"),s(" \u4FEE\u9970\u7684\u5C5E\u6027\u6216\u65B9\u6CD5\u662F\u79C1\u6709\u7684\uFF0C\u4E0D\u80FD\u5728\u58F0\u660E\u5B83\u7684\u7C7B\u7684\u5916\u90E8\u8BBF\u95EE")]),n("li",null,[n("code",null,"protected"),s(" \u4FEE\u9970\u7684\u5C5E\u6027\u6216\u65B9\u6CD5\u662F\u53D7\u4FDD\u62A4\u7684\uFF0C\u5B83\u548C "),n("code",null,"private"),s(" \u7C7B\u4F3C\uFF0C\u533A\u522B\u662F\u5B83\u5728\u5B50\u7C7B\u4E2D\u4E5F\u662F\u5141\u8BB8\u88AB\u8BBF\u95EE\u7684")])],-1),H={id:"\u7C7B\u4E0E\u63A5\u53E3",tabindex:"-1"},K=n("a",{class:"header-anchor",href:"#\u7C7B\u4E0E\u63A5\u53E3","aria-hidden":"true"},"#",-1),F={href:"https://www.typescriptlang.org/docs/handbook/interfaces.html#class-types",target:"_blank",rel:"noopener noreferrer"},Q=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// class Car{</span>
<span class="token comment">//     switchRadio(trigger:boolean){</span>

<span class="token comment">//     }</span>
<span class="token comment">// }</span>

<span class="token comment">// class cellphone{</span>
<span class="token comment">//     switchRadio(trigger:boolean){</span>

<span class="token comment">//     }</span>
<span class="token comment">// }</span>

<span class="token comment">// \u901A\u8FC7 implements \u5B9E\u73B0\u4E00\u4E9B\u7C7B\u5171\u6709\u65B9\u6CD5\u5C5E\u6027\u7684\u63D0\u53D6</span>
<span class="token keyword">interface</span> <span class="token class-name">Radio</span> <span class="token punctuation">{</span>
    <span class="token function">switchRadio</span><span class="token punctuation">(</span>trigger<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token keyword">implements</span> <span class="token class-name">Radio</span> <span class="token punctuation">{</span>
    <span class="token function">switchRadio</span><span class="token punctuation">(</span>trigger<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Battery</span> <span class="token punctuation">{</span>
    <span class="token function">checkBatteryStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8981\u5B9E\u73B0\u591A\u4E2A\u63A5\u53E3\uFF0C\u53EA\u9700\u8981\u4E2D\u95F4\u7528\u9017\u53F7\u9694\u5F00\u5373\u53EF</span>
<span class="token keyword">class</span> <span class="token class-name">Cellphone</span> <span class="token keyword">implements</span> <span class="token class-name">Radio</span><span class="token punctuation">,</span> Battery <span class="token punctuation">{</span>
    <span class="token function">switchRadio</span><span class="token punctuation">(</span>trigger<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token function">checkBatteryStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),G={id:"\u679A\u4E3E-enums",tabindex:"-1"},J=n("a",{class:"header-anchor",href:"#\u679A\u4E3E-enums","aria-hidden":"true"},"#",-1),X={href:"https://www.typescriptlang.org/docs/handbook/enums.html",target:"_blank",rel:"noopener noreferrer"},Y=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u6570\u5B57\u679A\u4E3E</span>
<span class="token comment">// \u4E00\u4E2A\u6570\u5B57\u679A\u4E3E\u53EF\u4EE5\u7528 enum \u8FD9\u4E2A\u5173\u952E\u8BCD\u6765\u5B9A\u4E49</span>
<span class="token comment">// \u5B9A\u4E49\u4E00\u7CFB\u5217\u7684\u65B9\u5411\uFF0C\u7136\u540E\u8FD9\u91CC\u9762\u7684\u503C\uFF0C\u679A\u4E3E\u6210\u5458\u4F1A\u88AB\u8D4B\u503C\u4E3A\u4ECE0\u5F00\u59CB\u9012\u589E\u7684\u6570\u5B57</span>
<span class="token keyword">enum</span> Direction <span class="token punctuation">{</span>
    Up<span class="token punctuation">,</span>
    Down<span class="token punctuation">,</span>
    Left<span class="token punctuation">,</span>
    Right<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Direction<span class="token punctuation">.</span>Up<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8FD8\u6709\u4E00\u4E2A\u795E\u5947\u7684\u70B9\uFF0C\u8FD9\u4E2A\u679A\u4E3E\u8FD8\u505A\u4E86\u53CD\u5411\u6620\u5C04</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Direction<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5B57\u7B26\u4E32\u679A\u4E3E</span>
<span class="token keyword">enum</span> Direction1 <span class="token punctuation">{</span>
    up <span class="token operator">=</span> <span class="token string">&quot;up&quot;</span><span class="token punctuation">,</span>
    down <span class="token operator">=</span> <span class="token string">&quot;down&quot;</span><span class="token punctuation">,</span>
    left <span class="token operator">=</span> <span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span>
    right <span class="token operator">=</span> <span class="token string">&quot;right&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token string">&quot;up&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> Direction1<span class="token punctuation">.</span>up<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;go up!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Z={id:"\u6CDB\u578B-generics",tabindex:"-1"},nn=n("a",{class:"header-anchor",href:"#\u6CDB\u578B-generics","aria-hidden":"true"},"#",-1),sn={href:"https://www.typescriptlang.org/docs/handbook/generics.html",target:"_blank",rel:"noopener noreferrer"},an=e(`<ul><li><strong>\u6CDB\u578B</strong>\u662F\u6307\u5728\u5B9A\u4E49\u51FD\u6570\u3001\u63A5\u53E3\u6216\u7C7B\u7684\u65F6\u5019\uFF0C\u4E0D\u9884\u5148\u6307\u5B9A\u5177\u4F53\u7684\u7C7B\u578B\uFF0C\u800C\u5728\u4F7F\u7528\u7684\u65F6\u5019\u518D\u6307\u5B9A\u7C7B\u578B\u7684\u4E00\u79CD\u7279\u6027</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// function echo(arg){</span>
<span class="token comment">//     return arg</span>
<span class="token comment">// }</span>
<span class="token comment">// const result = echo(123)</span>
<span class="token comment">// // \u8FD9\u91CC\u4F1A\u53D1\u73B0\uFF0C\u4F20\u5165\u4E86\u6570\u5B57\uFF0C\u4F46\u662F\u8FD4\u56DE\u7684\u662F any \u7C7B\u578B</span>

<span class="token comment">// \u4F7F\u7528\u6CDB\u578B</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">echo</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">echo</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> result1 <span class="token operator">=</span> <span class="token generic-function"><span class="token function">echo</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6CDB\u578B\u4E5F\u53EF\u4EE5\u4F20\u5165\u591A\u4E2A\u503C</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">swap</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>tuple<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>tuple<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> result2 <span class="token operator">=</span> <span class="token generic-function"><span class="token function">swap</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>\u6CDB\u578B\u7EA6\u675F</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">echoWithArr</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u62A5\u9519</span>
    <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u6CDB\u578B T \u4E2D\u4E0D\u4E00\u5B9A\u5305\u542B\u5C5E\u6027 length\uFF0C\u6240\u4EE5\u4F1A\u62A5\u9519</span>

<span class="token keyword">interface</span> <span class="token class-name">IWithLength</span> <span class="token punctuation">{</span>
    length<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">echoWithLength</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> IWithLength<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">echoWithLength</span><span class="token punctuation">(</span><span class="token string">&quot;str&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">echoWithLength</span><span class="token punctuation">(</span><span class="token punctuation">{</span> length<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> result1 <span class="token operator">=</span> <span class="token function">echoWithLength</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>\u6CDB\u578B\u4E0E\u7C7B\u548C\u63A5\u53E3</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Queue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">push</span><span class="token punctuation">(</span>item<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Queue<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6CDB\u578B \u548C interface</span>
<span class="token class-name"><span class="token keyword">interface</span></span> KeyPai<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
    value<span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> kp1<span class="token operator">:</span> KeyPai<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> key<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&quot;str&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> kp2<span class="token operator">:</span> KeyPai<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> key<span class="token operator">:</span> <span class="token string">&quot;str&quot;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7C7B\u578B\u522B\u540D\u548C\u4EA4\u53C9\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u522B\u540D\u548C\u4EA4\u53C9\u7C7B\u578B" aria-hidden="true">#</a> \u7C7B\u578B\u522B\u540D\u548C\u4EA4\u53C9\u7C7B\u578B</h2>`,9),tn={href:"https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-aliases",target:"_blank",rel:"noopener noreferrer"},en=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">arr</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj<span class="token operator">:</span> arr <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&quot;doing&quot;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">PulsType</span> <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> sum2<span class="token operator">:</span> <span class="token function-variable function">PulsType</span> <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum2</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u652F\u6301\u8054\u5408\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">StrOrNumber</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result2<span class="token operator">:</span> StrOrNumber <span class="token operator">=</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">;</span>
result2 <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>

<span class="token comment">// \u5B57\u7B26\u4E32\u5B57\u9762\u91CF</span>
<span class="token keyword">type</span> <span class="token class-name">Directions</span> <span class="token operator">=</span> <span class="token string">&quot;up&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;down&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;left&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;right&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> toWhere<span class="token operator">:</span> Directions <span class="token operator">=</span> <span class="token string">&quot;up&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,2),pn={href:"https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html#intersection-types",target:"_blank",rel:"noopener noreferrer"},on=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IName</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">IPerson</span> <span class="token operator">=</span> IName <span class="token operator">&amp;</span> <span class="token punctuation">{</span> age<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> person<span class="token operator">:</span> IPerson <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&quot;doing&quot;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),cn={id:"\u58F0\u660E\u6587\u4EF6",tabindex:"-1"},ln=n("a",{class:"header-anchor",href:"#\u58F0\u660E\u6587\u4EF6","aria-hidden":"true"},"#",-1),un={href:"https://www.typescriptlang.org/docs/handbook/declaration-files/introduction.html",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://github.com/DefinitelyTyped/DefinitelyTyped/",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://www.typescriptlang.org/dt/search?search=",target:"_blank",rel:"noopener noreferrer"},dn={id:"\u5185\u7F6E\u7C7B\u578B",tabindex:"-1"},mn=n("a",{class:"header-anchor",href:"#\u5185\u7F6E\u7C7B\u578B","aria-hidden":"true"},"#",-1),vn={href:"https://github.com/Microsoft/TypeScript/tree/main/src/lib",target:"_blank",rel:"noopener noreferrer"},bn=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> a<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> date<span class="token operator">:</span> Date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">abc</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// DOM \u548C BOM \u6807\u51C6\u5BF9\u8C61</span>
<span class="token comment">// document \u5BF9\u8C61\uFF0C\u8FD4\u56DE HTMLElement</span>
<span class="token keyword">let</span> body<span class="token operator">:</span> HTMLElement <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">;</span>

<span class="token comment">// document \u4E0A\u7684 query \u65B9\u6CD5\uFF0C\u8FD4\u56DE\u4E00\u4E2A nodeList \u7C7B\u578B</span>
<span class="token keyword">let</span> allList<span class="token operator">:</span> NodeList <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,2),gn={href:"https://www.typescriptlang.org/docs/handbook/utility-types.html",target:"_blank",rel:"noopener noreferrer"},hn=n("blockquote",null,[n("p",null,"Typescript \u8FD8\u63D0\u4F9B\u4E86\u4E00\u4E9B\u529F\u80FD\u6027\uFF0C\u5E2E\u52A9\u6027\u7684\u7C7B\u578B\uFF0C\u8FD9\u4E9B\u7C7B\u578B\uFF0C\u5927\u5BB6\u5728 js \u7684\u4E16\u754C\u662F\u770B\u4E0D\u5230\u7684\uFF0C\u8FD9\u4E9B\u7C7B\u578B\u53EB\u505A utility types\uFF0C\u63D0\u4F9B\u4E00\u4E9B\u7B80\u6D01\u660E\u5FEB\u800C\u4E14\u975E\u5E38\u65B9\u4FBF\u7684\u529F\u80FD")],-1),yn=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IPerson</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> test<span class="token operator">:</span> IPerson <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&quot;doing&quot;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// partial \u628A\u4F20\u5165\u7684\u7C7B\u578B\u90FD\u53D8\u6210\u53EF\u9009</span>
<span class="token keyword">type</span> <span class="token class-name">IPartial</span> <span class="token operator">=</span> Partial<span class="token operator">&lt;</span>IPerson<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> test2<span class="token operator">:</span> IPartial <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Omit \u5B83\u8FD4\u56DE\u7684\u7C7B\u578B\u53EF\u4EE5\u5FFD\u7565\u4F20\u5165\u7C7B\u578B\u7684\u67D0\u4E00\u4E2A\u5C5E\u6027</span>
<span class="token keyword">type</span> <span class="token class-name">IOmit</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>IPerson<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// \u4F20\u5165 &quot;name&quot;\uFF0C\u5C31\u5C06 name \u53D8\u4E3A\u4E86\u53EF\u9009</span>
<span class="token keyword">let</span> test3<span class="token operator">:</span> IOmit <span class="token operator">=</span> <span class="token punctuation">{</span>
    age<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),wn={id:"\u914D\u7F6E\u6587\u4EF6",tabindex:"-1"},fn=n("a",{class:"header-anchor",href:"#\u914D\u7F6E\u6587\u4EF6","aria-hidden":"true"},"#",-1),_n={href:"https://www.typescriptlang.org/tsconfig",target:"_blank",rel:"noopener noreferrer"},qn=e(`<div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;files&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;test.ts&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test2.d.ts&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./output&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ESNext&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span><span class="token string">&quot;ES5&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;declaration&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function xn(Tn,Sn){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[n("li",null,[n("p",null,[n("a",r,[s("typescript \u5B98\u7F51\u5730\u5740"),t(a)])])]),n("li",null,[n("p",null,[n("a",k,[s("\u4F7F\u7528 nvm \u6765\u7BA1\u7406 node \u7248\u672C"),t(a)])])])]),d,n("h2",m,[v,s(),n("a",b,[s("\u539F\u59CB\u6570\u636E\u7C7B\u578B"),t(a)])]),g,n("ul",null,[n("li",null,[n("a",h,[s("any \u7C7B\u578B"),t(a)])])]),y,n("h2",w,[f,s(),n("a",_,[s("Array \u548C Tuple"),t(a)])]),q,n("h2",x,[T,s(),n("a",S,[s("interface \u63A5\u53E3"),t(a)])]),I,n("h2",N,[D,s(),n("a",P,[s("\u51FD\u6570"),t(a)])]),L,n("ul",null,[n("li",null,[n("p",null,[n("a",O,[s("\u7C7B\u578B\u63A8\u8BBA - type inference"),t(a)])])]),n("li",null,[n("p",null,[n("a",A,[s("\u8054\u5408\u7C7B\u578B - union types"),t(a)])])])]),B,n("ul",null,[n("li",null,[n("a",E,[s("\u7C7B\u578B\u65AD\u8A00 - type assertions"),t(a)])])]),R,n("ul",null,[n("li",null,[n("a",U,[s("\u7C7B\u578B\u5B88\u536B - type guard"),t(a)])])]),W,n("h2",C,[M,s(),n("a",j,[s("Class \u7C7B"),t(a)])]),z,n("ul",null,[n("li",null,[n("p",null,[n("a",V,[s("\u7C7B\u6210\u5458\u7684\u8BBF\u95EE\u4FEE\u9970\u7B26"),t(a)])]),$])]),n("h2",H,[K,s(),n("a",F,[s("\u7C7B\u4E0E\u63A5\u53E3"),t(a)])]),Q,n("h2",G,[J,s(),n("a",X,[s("\u679A\u4E3E Enums"),t(a)])]),Y,n("h2",Z,[nn,s(),n("a",sn,[s("\u6CDB\u578B Generics"),t(a)])]),an,n("ul",null,[n("li",null,[n("a",tn,[s("\u7C7B\u578B\u522B\u540D"),t(a)])])]),en,n("ul",null,[n("li",null,[n("a",pn,[s("\u4EA4\u53C9\u7C7B\u578B"),t(a)])])]),on,n("h2",cn,[ln,s(),n("a",un,[s("\u58F0\u660E\u6587\u4EF6"),t(a)])]),n("ul",null,[n("li",null,[n("a",rn,[s("@types \u5B98\u65B9\u58F0\u660E\u6587\u4EF6\u5E93"),t(a)])]),n("li",null,[n("a",kn,[s("@types \u641C\u7D22\u58F0\u660E\u5E93"),t(a)])])]),n("h2",dn,[mn,s(),n("a",vn,[s("\u5185\u7F6E\u7C7B\u578B"),t(a)])]),bn,n("ul",null,[n("li",null,[n("a",gn,[s("Utility Types"),t(a)]),hn])]),yn,n("h2",wn,[fn,s(),n("a",_n,[s("\u914D\u7F6E\u6587\u4EF6"),t(a)])]),qn])}const Dn=p(i,[["render",xn],["__file","index.html.vue"]]);export{Dn as default};
