import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as p}from"./app.02ae940c.js";const t={},e=p(`<p>TypeScript \u548C JavaScript \u63D0\u4F9B\u4E86\u4E00\u7CFB\u5217\u6709\u7528\u7684\u7B80\u5199\u4EE3\u7801\uFF0C\u8FD9\u4E9B\u7B80\u5199\u4EE3\u7801\u5F80\u5F80\u80FD\u51CF\u5C11\u4EE3\u7801\u884C\u6570\uFF0C\u63D0\u9AD8\u5F00\u53D1\u6548\u7387\u7B49\u3002\u672C\u6587\u5C06\u56DE\u987E 15 \u79CD\u6700\u5E38\u89C1\u7684 TypeScript \u548C JavaScript \u7684\u7B80\u5199\u4EE3\u7801\uFF0C\u5E76\u4E3E\u4F8B\u8BF4\u660E\u5176\u7528\u6CD5\u3002\u4EE5\u4E0B\u662F\u8FD9 15 \u79CD\u7B80\u5199\u4EE3\u7801\u7684\u6E05\u5355\uFF1A</p><ul><li>\u4E09\u5143\u8FD0\u7B97\u7B26</li><li>\u77ED\u8DEF\u6C42\u503C</li><li>\u7A7A\u503C\u5408\u5E76\u64CD\u4F5C\u7B26\uFF08??\uFF09</li><li>\u5B57\u9762\u91CF\u6A21\u677F</li><li>\u5BF9\u8C61\u5C5E\u6027\u5206\u914D</li><li>\u53EF\u9009\u94FE\u8FD0\u7B97\u7B26\uFF08?.\uFF09</li><li>\u5BF9\u8C61\u89E3\u6784</li><li>\u5EF6\u5C55\u64CD\u4F5C\u7B26\uFF08...\uFF09</li><li>\u5BF9\u8C61\u5FAA\u73AF</li><li>\u6309\u4F4D\u8FD0\u7B97\u7B26\uFF08~\uFF09</li><li>\u5E03\u5C14\u503C\u9690\u5F0F\u8F6C\u6362\uFF08!!\uFF09</li><li>\u7BAD\u5934\u51FD\u6570\u8868\u8FBE\u5F0F\u53CA\u5176\u9690\u5F0F\u8FD4\u56DE</li><li>\u53CC\u6309\u4F4D NOT \u8FD0\u7B97\u7B26\uFF08~~\uFF09</li><li>\u6307\u6570\u5E42\u8FD0\u7B97\u7B26\uFF08**\uFF09</li><li>TypeScript \u6784\u9020\u51FD\u6570\u7B80\u5199</li></ul><h3 id="_1-\u4E09\u5143\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#_1-\u4E09\u5143\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> 1\uFF09\u4E09\u5143\u8FD0\u7B97\u7B26</h3><p>\u4E3B\u8981\u7528\u4E8E\u66FF\u6362 <code>if...else...</code> \u8BED\u53E5\uFF0C\u5176\u683C\u5F0F\u5982\u4E0B \uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span>condition<span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token boolean">true</span> result<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token boolean">false</span> result<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
<span class="token keyword">const</span> mark <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>mark <span class="token operator">&gt;=</span> <span class="token number">65</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Pass&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Fail&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">const</span> mark <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>

<span class="token keyword">return</span> mark <span class="token operator">&gt;=</span> <span class="token number">65</span> <span class="token operator">?</span> <span class="token string">&quot;Pass&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;Fail&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u77ED\u8DEF\u6C42\u503C" tabindex="-1"><a class="header-anchor" href="#_2-\u77ED\u8DEF\u6C42\u503C" aria-hidden="true">#</a> 2\uFF09\u77ED\u8DEF\u6C42\u503C</h3><p>\u540C\u6837\u7528\u4E8E\u66FF\u6362 <code>if...else...</code> \u8BED\u53E5\uFF0C\u4F46\u5B83\u9002\u7528\u4E8E\u9700\u8981\u5BF9\u8D1F\u503C\u8FDB\u884C\u5224\u65AD\u7684\u573A\u666F\uFF0C\u5982\u679C\u662F\u8D1F\u503C\u5219\u5411\u540E\u53D6\u503C\uFF0C\u76F4\u5230\u53D6\u5230\u6B63\u503C\u4E3A\u6B62\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> finalStr<span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> str <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> str <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    finalStr <span class="token operator">=</span> str<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    finalStr <span class="token operator">=</span> <span class="token string">&quot;default string&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> finalStr <span class="token operator">=</span> str <span class="token operator">||</span> <span class="token string">&quot;default string&quot;</span><span class="token punctuation">;</span> <span class="token comment">// &#39;default string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u7A7A\u503C\u5408\u5E76\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#_3-\u7A7A\u503C\u5408\u5E76\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> 3\uFF09\u7A7A\u503C\u5408\u5E76\u64CD\u4F5C\u7B26\uFF08??\uFF09</h3><p>\u7C7B\u4F3C\u4E8E\u77ED\u8DEF\u6C42\u503C\uFF0C\u552F\u4E00\u7684\u533A\u522B\u5728\u4E8E\uFF0C\u8FD9\u4E2A\u53EA\u9002\u7528\u4E8E\u5BF9\u7A7A\u503C\uFF08Null\uFF09\u7684\u5224\u65AD\uFF0C\u800C\u975E\u8D1F\u503C\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> finaStr <span class="token operator">=</span> str <span class="token operator">??</span> <span class="token string">&quot;default string&quot;</span><span class="token punctuation">;</span> <span class="token comment">// &#39;&#39;</span>

<span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> actualNum<span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> num <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    actualNum <span class="token operator">=</span> num<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    actualNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> actualNum <span class="token operator">=</span> num <span class="token operator">??</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u5B57\u9762\u91CF\u6A21\u677F" tabindex="-1"><a class="header-anchor" href="#_4-\u5B57\u9762\u91CF\u6A21\u677F" aria-hidden="true">#</a> 4\uFF09\u5B57\u9762\u91CF\u6A21\u677F</h3><p>\u8FD9\u662F ES6 \u7684\u7279\u6027\uFF0C\u6211\u4EEC\u4F7F\u7528\u5B57\u9762\u91CF\u6A21\u677F\uFF08<code>\${}</code>\uFF09\u6765\u66FF\u6362\u5B57\u7B26\u4E32\u7528 <code>+</code> \u7684\u8FDE\u63A5\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&quot;Martin&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> hobby <span class="token operator">=</span> <span class="token string">&quot;to read&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> thing <span class="token operator">=</span> <span class="token string">&quot;books&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
<span class="token keyword">const</span> fullStr <span class="token operator">=</span> name <span class="token operator">+</span> <span class="token string">&quot; loves &quot;</span> <span class="token operator">+</span> hobby <span class="token operator">+</span> thing <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">;</span> <span class="token comment">// &#39;Martin loves to read books.&#39;</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">const</span> fullStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> loves </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hobby<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>thing<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-\u5BF9\u8C61\u5C5E\u6027\u5206\u914D" tabindex="-1"><a class="header-anchor" href="#_5-\u5BF9\u8C61\u5C5E\u6027\u5206\u914D" aria-hidden="true">#</a> 5\uFF09\u5BF9\u8C61\u5C5E\u6027\u5206\u914D</h3><p>\u5728 JavaScript \u548C TypeScript \u4E2D\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u5BF9\u8C61\u5C5E\u6027\u7684\u7B80\u5199\u65B9\u5F0F\u6765\u7ED9\u5BF9\u8C61\u7684\u5C5E\u6027\u8D4B\u503C\uFF0C\u4F46\u8D4B\u503C\u5BF9\u8C61\u5FC5\u987B\u548C\u5BF9\u8C61\u7684\u5C5E\u6027\u4FDD\u6301\u4E00\u81F4\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">z</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> y <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-\u53EF\u9009\u94FE\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#_6-\u53EF\u9009\u94FE\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> 6\uFF09\u53EF\u9009\u94FE\u8FD0\u7B97\u7B26\uFF08?.\uFF09</h3><p>\u6211\u4EEC\u901A\u5E38\u9700\u8981\u5BF9\u5BF9\u8C61\u7684\u5C5E\u6027\u8FDB\u884C\u662F\u5426\u5B58\u5728\u4EE5\u53CA\u503C\u7684\u975E\u7A7A\u5224\u65AD\uFF0C\u53EF\u9009\u94FE\u7684\u65B9\u5F0F\u80FD\u66F4\u597D\u5730\u5B9E\u73B0\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token literal-property property">z</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">others</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tested&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasProperty</span><span class="token punctuation">(</span><span class="token string">&quot;others&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> others<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;2nd value in others: &quot;</span><span class="token punctuation">,</span> obj<span class="token punctuation">.</span>others<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;2nd value in others: &quot;</span><span class="token punctuation">,</span> obj<span class="token punctuation">.</span>others<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;tested&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;3rd value in others: &quot;</span><span class="token punctuation">,</span> obj<span class="token punctuation">.</span>others<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-\u5BF9\u8C61\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#_7-\u5BF9\u8C61\u89E3\u6784" aria-hidden="true">#</a> 7\uFF09\u5BF9\u8C61\u89E3\u6784</h3><p>\u9664\u4E86\u70B9\u8FD0\u7B97\u7B26\uFF08.\uFF09\u53E6\u4E00\u79CD\u83B7\u53D6\u5BF9\u8C61\u5C5E\u6027\u503C\u7684\u65B9\u5F0F\u5C31\u662F\u5BF9\u8C61\u89E3\u6784\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token literal-property property">z</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">other</span><span class="token operator">:</span> <span class="token string">&quot;test string&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Value of z in x: &quot;</span><span class="token punctuation">,</span> obj<span class="token punctuation">.</span>x<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Value of other: &quot;</span><span class="token punctuation">,</span> obj<span class="token punctuation">.</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> other <span class="token punctuation">}</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> z <span class="token punctuation">}</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Value of z in x: &quot;</span><span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Value of other: &quot;</span><span class="token punctuation">,</span> other<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> myVar <span class="token punctuation">}</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span> <span class="token comment">// \u53D8\u91CF\u91CD\u547D\u540D</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;My renamed variable: &quot;</span><span class="token punctuation">,</span> myVar<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// My renamed variable: 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-\u5EF6\u5C55\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#_8-\u5EF6\u5C55\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> 8\uFF09\u5EF6\u5C55\u64CD\u4F5C\u7B26\uFF08...\uFF09</h3><p>\u53EF\u7528\u4E8E\u5BF9\u6570\u7EC4\u7684\u62FC\u63A5\uFF0C\u5BF9\u8C61\u7684\u5408\u5E76\u7B49</p><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> biggerArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> smallObj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> otherObj <span class="token operator">=</span> object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>smallObj<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> biggerArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> smallObj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> otherObj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>smallObj<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-\u5BF9\u8C61\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#_9-\u5BF9\u8C61\u5FAA\u73AF" aria-hidden="true">#</a> 9\uFF09\u5BF9\u8C61\u5FAA\u73AF</h3><p>\u6709\u4E09\u79CD <code>for</code> \u5FAA\u73AF\u7684\u7B80\u5199\u65B9\u5F0F\u6765\u8FED\u4EE3\u5904\u7406\u6570\u7EC4\u5BF9\u8C61\uFF1A</p><ul><li><code>for...of</code> \u7528\u6765\u8FED\u4EE3\u8BBF\u95EE\u6570\u7EC4</li><li><code>for...in</code> \u7528\u6765\u8FED\u4EE3\u8BBF\u95EE\u6570\u7EC4\u7684\u7D22\u5F15\u6216\u8005\u5BF9\u8C61\u7684\u5C5E\u6027\uFF08\u952E\uFF09</li><li><code>Array.forEach</code> \u6765\u5904\u7406\u6570\u7EC4\u5143\u7D20\u548C\u7D22\u5F15</li></ul><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Yes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;No&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Maybe&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Here is item: &quot;</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> str <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Here is item: &quot;</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Here is item: &quot;</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token keyword">in</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Item at index </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// For object literals</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Value at key </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-\u6309\u4F4D\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#_10-\u6309\u4F4D\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> 10\uFF09\u6309\u4F4D\u8FD0\u7B97\u7B26\uFF08~\uFF09</h3><p>\u6211\u4EEC\u901A\u8FC7 <code>Array.indexOf</code> \u6765\u68C0\u6D4B\u6570\u7EC4\u4E2D\u662F\u5426\u5B58\u5728\u67D0\u4E00\u9879\uFF0C\u901A\u5E38\u5B83\u8FD4\u56DE\u4E00\u4E2A\u5927\u4E8E -1 \u7684\u503C\u6765\u8868\u793A\u5B58\u5728\u3002 \u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u6309\u4F4D\u8FD0\u7B97\u7B26 <code>~</code> \u6765\u68C0\u6D4B\u503C\u5728\u6570\u7EC4\u79CD\u7684\u7D22\u5F15\u662F\u5426\u5927\u4E8E\u7B49\u4E8E 0\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> realNum <span class="token operator">=</span> <span class="token number">10</span>
<span class="token keyword">const</span> fakeNum <span class="token operator">=</span> <span class="token number">20</span>

<span class="token keyword">const</span> realNumIndex <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>realNum<span class="token punctuation">)</span>
<span class="token keyword">const</span> noneNumIndex <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>fakeNum<span class="token punctuation">)</span>

<span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>realNumIndex <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>realNum<span class="token punctuation">,</span> <span class="token string">&#39; exists!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>realNumIndex <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>realNum<span class="token punctuation">,</span> <span class="token string">&#39; does not exist!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>noneNumIndex <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fakeNum<span class="token punctuation">,</span> <span class="token string">&#39; exists!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>noneNumIndex <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fakeNum<span class="token punctuation">,</span> <span class="token string">&#39; does not exist!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>realNum <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">~</span>realNumIndex <span class="token operator">?</span> <span class="token string">&#39; exists!&#39;</span> <span class="token operator">:</span> <span class="token string">&#39; does not exist!&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fakeNum <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">~</span>noneNumIndex <span class="token operator">?</span> <span class="token string">&#39; exists!&#39;</span> <span class="token operator">:</span> <span class="token string">&#39; does not exist!&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-\u5E03\u5C14\u503C\u9690\u5F0F\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#_11-\u5E03\u5C14\u503C\u9690\u5F0F\u8F6C\u6362" aria-hidden="true">#</a> 11\uFF09\u5E03\u5C14\u503C\u9690\u5F0F\u8F6C\u6362\uFF08!!\uFF09</h3><p>\u5728 JavaScript \u4E2D\uFF0C\u4F60\u53EF\u4EE5\u5BF9\u4EFB\u610F\u53D8\u91CF\u4F7F\u7528 <code>!!</code> \u6765\u9690\u5F0F\u8F6C\u6362\u53D8\u91CF\u7C7B\u578B\u4E3A\u5E03\u5C14\u578B\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
<span class="token keyword">const</span> simpleInt <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> intAsBool <span class="token operator">=</span> <span class="token function">Boolean</span><span class="token punctuation">(</span>simpleInt<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">const</span> simpleInt <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> intAsBool <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>simpleInt<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_12-\u7BAD\u5934\u51FD\u6570\u8868\u8FBE\u5F0F\u53CA\u5176\u9690\u5F0F\u8FD4\u56DE" tabindex="-1"><a class="header-anchor" href="#_12-\u7BAD\u5934\u51FD\u6570\u8868\u8FBE\u5F0F\u53CA\u5176\u9690\u5F0F\u8FD4\u56DE" aria-hidden="true">#</a> 12\uFF09\u7BAD\u5934\u51FD\u6570\u8868\u8FBE\u5F0F\u53CA\u5176\u9690\u5F0F\u8FD4\u56DE</h3><p>\u7BAD\u5934\u51FD\u6570\u6709\u70B9\u7C7B\u4F3C\u4E8E\u5176\u4ED6\u8BED\u8A00\u7684 lambda \u8868\u8FBE\u5F0F\uFF0C\u4F46\u8981\u6CE8\u610F\u51FD\u6570\u5185\u90E8 <code>this</code> \u7684\u53D8\u5316\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
<span class="token keyword">function</span> <span class="token function">printStr</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;This is a string: &quot;</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">printStr</span><span class="token punctuation">(</span><span class="token string">&quot;Girl!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">const</span> <span class="token function-variable function">printStr</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;This is a string: &quot;</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">printStr</span><span class="token punctuation">(</span><span class="token string">&quot;Girl!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// TypeScript \u7B80\u5199\u65B9\u5F0F\uFF08\u58F0\u660E\u5165\u53C2\u7C7B\u578B\uFF09</span>
<span class="token keyword">const</span> <span class="token function-variable function">printStr</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">str</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;This is a string: &quot;</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">printStr</span><span class="token punctuation">(</span><span class="token string">&quot;Girl!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7BAD\u5934\u51FD\u6570\u7684\u8FD4\u56DE\u65B9\u5F0F\u4E5F\u6709\u4E24\u79CD\uFF0C\u4E00\u79CD\u662F\u82B1\u62EC\u53F7\u5219\u9700\u8981 <code>return</code> \u8BED\u53E5\uFF0C \u53E6\u4E00\u79CD\u662F\u5706\u62EC\u53F7\uFF0C\u5219\u4E0D\u9700\u8981 <code>return</code> \u8BED\u53E5\uFF0C\u5706\u62EC\u53F7\u7684\u8868\u8FBE\u5F0F\u503C\u5373\u662F\u8FD4\u56DE\u503C\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
<span class="token keyword">function</span> <span class="token function">capitalize</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> name<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">numA<span class="token punctuation">,</span> numB</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> numA <span class="token operator">+</span> numB<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">const</span> <span class="token function-variable function">capitalize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> name<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">numA<span class="token punctuation">,</span> numB</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> numA <span class="token operator">+</span> numB<span class="token punctuation">;</span>

<span class="token comment">// TypeScript \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">const</span> <span class="token function-variable function">capitalize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> name<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">numA</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">numB</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> numA <span class="token operator">+</span> numB<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_13-\u53CC\u6309\u4F4D-not-\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#_13-\u53CC\u6309\u4F4D-not-\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> 13\uFF09\u53CC\u6309\u4F4D NOT \u8FD0\u7B97\u7B26\uFF08~~\uFF09</h3><p>\u5176\u5B9E\u5C31\u662F <code>Math.floor()</code> \u65B9\u6CD5\u7684\u7B80\u5199\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
<span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token number">4.5</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> floorNum <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token number">4.5</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> floorNum <span class="token operator">=</span> <span class="token operator">~</span><span class="token operator">~</span>num<span class="token punctuation">;</span> <span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_14-\u6307\u6570\u5E42\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#_14-\u6307\u6570\u5E42\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> 14\uFF09\u6307\u6570\u5E42\u8FD0\u7B97\u7B26\uFF08**\uFF09</h3><p>\u5176\u5B9E\u5C31\u662F <code>Math.pow()</code> \u65B9\u6CD5\u7684\u7B80\u5199\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
<span class="token keyword">const</span> num <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 81</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">**</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// 81</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_15-typescript-\u6784\u9020\u51FD\u6570\u7B80\u5199" tabindex="-1"><a class="header-anchor" href="#_15-typescript-\u6784\u9020\u51FD\u6570\u7B80\u5199" aria-hidden="true">#</a> 15\uFF09TypeScript \u6784\u9020\u51FD\u6570\u7B80\u5199</h3><p>\u662F TypeScript \u7279\u6709\u7684\u7B80\u5199\u65B9\u5F0F\uFF0C\u4E0D\u9002\u7528\u4E8E JavaScript</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u666E\u901A\u65B9\u5F0F</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token literal-property property">name</span><span class="token operator">:</span> string
  <span class="token keyword">public</span> <span class="token literal-property property">age</span><span class="token operator">:</span> int
  <span class="token keyword">protected</span> <span class="token literal-property property">hobbies</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> int<span class="token punctuation">,</span> <span class="token literal-property property">hobbies</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
    <span class="token keyword">this</span><span class="token punctuation">.</span>hobbies <span class="token operator">=</span> hobbies
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B80\u5199\u65B9\u5F0F</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>
    <span class="token parameter"><span class="token keyword">private</span> <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
    <span class="token keyword">public</span> <span class="token literal-property property">age</span><span class="token operator">:</span> int<span class="token punctuation">,</span>
    <span class="token keyword">protected</span> <span class="token literal-property property">hobbies</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span></span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_16-switch-case" tabindex="-1"><a class="header-anchor" href="#_16-switch-case" aria-hidden="true">#</a> 16) switch case</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> type <span class="token operator">=</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// if else if</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&quot;A&quot;</span> <span class="token operator">||</span> type <span class="token operator">===</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// switch case</span>
<span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&quot;A&quot;</span><span class="token operator">:</span>
    <span class="token keyword">case</span> <span class="token string">&quot;B&quot;</span><span class="token operator">:</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&quot;C&quot;</span><span class="token operator">:</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&quot;D&quot;</span><span class="token operator">:</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_17-\u5BF9\u8C61\u914D\u7F6E-\u7B56\u7565\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_17-\u5BF9\u8C61\u914D\u7F6E-\u7B56\u7565\u6A21\u5F0F" aria-hidden="true">#</a> 17) \u5BF9\u8C61\u914D\u7F6E/\u7B56\u7565\u6A21\u5F0F</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> type <span class="token operator">=</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> tactics <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token constant">A</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token constant">B</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token constant">C</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token constant">D</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>tactics<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary>\u6848\u4F8B\u4E00 \u5546\u573A\u4FC3\u9500\u4EF7</summary><ul><li>\u6839\u636E\u4E0D\u540C\u7684\u7528\u6237\u4F7F\u7528\u4E0D\u540C\u7684\u6298\u6263</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// if else if</span>
<span class="token keyword">const</span> <span class="token function-variable function">getDiscount</span> <span class="token operator">=</span> <span class="token punctuation">(</span>userKey<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>userKey <span class="token operator">===</span> <span class="token string">&quot;\u666E\u901A\u4F1A\u5458&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0.9</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>userKey <span class="token operator">===</span> <span class="token string">&quot;\u5E74\u8D39\u4F1A\u5458&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0.85</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>userKey <span class="token operator">===</span> <span class="token string">&quot;\u8D85\u7EA7\u4F1A\u5458&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0.8</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getDiscount</span><span class="token punctuation">(</span><span class="token string">&quot;\u666E\u901A\u4F1A\u5458&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528\u5BF9\u8C61\u914D\u7F6E/\u7B56\u7565\u6A21\u5F0F\u5B9E\u73B0</span>
<span class="token keyword">const</span> <span class="token function-variable function">getDiscount1</span> <span class="token operator">=</span> <span class="token punctuation">(</span>userKey1<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> discounts <span class="token operator">=</span> <span class="token punctuation">{</span>
        \u666E\u901A\u4F1A\u5458<span class="token operator">:</span> <span class="token number">0.9</span><span class="token punctuation">,</span>
        \u5E74\u8D39\u4F1A\u5458<span class="token operator">:</span> <span class="token number">0.85</span><span class="token punctuation">,</span>
        \u8D85\u7EA7\u4F1A\u5458<span class="token operator">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span>
        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> discounts<span class="token punctuation">[</span>userKey1<span class="token punctuation">]</span> <span class="token operator">||</span> discounts<span class="token punctuation">[</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getDiscount1</span><span class="token punctuation">(</span><span class="token string">&quot;\u666E\u901A\u4F1A\u5458&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528 Map \u7BA1\u7406</span>
<span class="token keyword">const</span> <span class="token function-variable function">getDiscount2</span> <span class="token operator">=</span> <span class="token punctuation">(</span>userKey2<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> discounts1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token punctuation">[</span><span class="token string">&quot;\u666E\u901A\u4F1A\u5458&quot;</span><span class="token punctuation">,</span> <span class="token number">0.9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token string">&quot;\u5E74\u8D39\u4F1A\u5458&quot;</span><span class="token punctuation">,</span> <span class="token number">0.85</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token string">&quot;\u8D85\u7EA7\u4F1A\u5458&quot;</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> discounts1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>userKey2<span class="token punctuation">)</span> <span class="token operator">||</span> discounts1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getDiscount2</span><span class="token punctuation">(</span><span class="token string">&quot;\u666E\u901A\u4F1A\u5458&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>\u6848\u4F8B\u4E8C \u5E74\u7EC8\u5956</summary><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">calculateBonus</span> <span class="token operator">=</span> <span class="token punctuation">(</span>performanceLevel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> salary<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>performanceLevel <span class="token operator">===</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> salary <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>performanceLevel <span class="token operator">===</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> salary <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>performanceLevel <span class="token operator">===</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> salary <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">calculateBonus</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528 \u5BF9\u8C61\u914D\u7F6E/\u7B56\u7565\u6A21\u5F0F\u8FDB\u884C\u7B80\u5316</span>
<span class="token keyword">let</span> strategies <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">calculateBonus1</span> <span class="token operator">=</span> <span class="token punctuation">(</span>performanceLevel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> salary<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    strategies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>performanceLevel<span class="token punctuation">)</span><span class="token operator">!</span> <span class="token operator">*</span> salary<span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">calculateBonus1</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="\u7ED3\u8BBA" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u8BBA" aria-hidden="true">#</a> \u7ED3\u8BBA</h2><p>\u4EE5\u4E0A\u5C31\u662F\u4E00\u4E9B\u6700\u5E38\u7528\u7684 JavaScript \u548C TypeScript \u7684\u7B80\u5199\u65B9\u5F0F\uFF0C\u4F46\u540C\u65F6\u8BF7\u8BB0\u4F4F\uFF0C\u4F7F\u7528\u7B80\u5199\u65B9\u5F0F\u5E76\u975E\u5728\u6240\u6709\u60C5\u51B5\u4E0B\u7684\u6700\u4F73\u9009\u62E9\uFF0C\u4E3B\u8981\u8FD8\u662F\u770B\u4F7F\u7528\u573A\u666F\uFF0C\u5199\u4EE3\u7801\u5173\u952E\u8FD8\u662F\u5E72\u51C0\u3001\u6709\u6548\u4E14\u6709\u5F88\u597D\u7684\u53EF\u8BFB\u6027\u3002</p>`,74),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","\u7B80\u5199\u4EE3\u7801.html.vue"]]);export{k as default};
