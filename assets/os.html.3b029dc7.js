import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as i,f as p}from"./app.f66cef50.js";const s={},h=p(`<p>os模块是Python中整理文件和目录最为常用的模块，该模块提供了非常丰富的方法用来处理文件和目录。本着<code>只讲最有用</code>的态度，下方我将os模块中一些我经常用的的方法，给大家详细列举出来了，<code>希望减少大家的学习负担</code>。 <img src="https://img-blog.csdnimg.cn/202008261737219.png" alt="在这里插入图片描述"></p><h2 id="知识串讲" tabindex="-1"><a class="header-anchor" href="#知识串讲" aria-hidden="true">#</a> 知识串讲</h2><h4 id="_1-模块的安装和导入" tabindex="-1"><a class="header-anchor" href="#_1-模块的安装和导入" aria-hidden="true">#</a> 1）模块的安装和导入</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 导入
import os
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-os-getcwd" tabindex="-1"><a class="header-anchor" href="#_2-os-getcwd" aria-hidden="true">#</a> 2）os.getcwd()</h4><ul><li><p>作用：获取当前的工作路径；</p><p>os.getcwd()</p></li></ul><p>结果如下： <img src="https://img-blog.csdnimg.cn/20200817074908535.png" alt="在这里插入图片描述"></p><h4 id="_3-os-listdir-path" tabindex="-1"><a class="header-anchor" href="#_3-os-listdir-path" aria-hidden="true">#</a> 3）os.listdir(path)</h4><ul><li><p>作用：传入任意一个path路径，返回的是该路径下所有<code>文件和目录</code>组成的列表；</p><p>path = r&quot;./&quot; os.listdir(path)</p></li></ul><p>结果如下： <img src="https://img-blog.csdnimg.cn/20200817075749869.png" alt="在这里插入图片描述"></p><h4 id="_3-os-walk-path" tabindex="-1"><a class="header-anchor" href="#_3-os-walk-path" aria-hidden="true">#</a> 3）os.walk(path)</h4><ul><li><p>含义 ：传入任意一个path路径，深层次遍历指定路径下的所有子文件夹，返回的是一个由路径、文件夹列表、文件列表组成的元组。我代码中写的方式属于<code>元组拆包</code>；</p></li><li><p><code>元组拆包</code>：就是将一个元组中的每个值，赋值给不同的变量；</p><p>path = r&quot;C:Users黄伟Desktoppublishos模块 est_os模块&quot; for path,dirs,files in os.walk(path): print(path) print(dirs) print(files) print(&quot; &quot;)</p></li></ul><p>结果如下： <img src="https://img-blog.csdnimg.cn/20200817075940370.png" alt="在这里插入图片描述"></p><h4 id="_4-os-path-exists-path" tabindex="-1"><a class="header-anchor" href="#_4-os-path-exists-path" aria-hidden="true">#</a> 4）os.path.exists(path)</h4><ul><li><p>含义：传入一个path路径，判断指定路径下的目录是否存在。存在返回True，否则返回False；</p><p>path1 = ‘C:\\Users\\黄伟\\Desktop\\publish\\os模块\\huang_wei’</p><p>if os.path.exists(path1): print(“指定文件夹存在”) else: print(“指定文件夹不存在”)</p></li></ul><p>结果如下： <img src="https://img-blog.csdnimg.cn/20200817081406590.png" alt="在这里插入图片描述"></p><h4 id="_5-os-mkdir-path" tabindex="-1"><a class="header-anchor" href="#_5-os-mkdir-path" aria-hidden="true">#</a> 5）os.mkdir(path)</h4><ul><li><p>含义：传入一个path路径，创建单层(单个)文件夹；</p></li><li><p>注意：如果文件夹已经存在，就会报错。因此创建文件夹之前，需要使用os.path.exists(path)函数判断文件夹是否存在；</p><p>os.getcwd() path1 = os.getcwd()+“\\huang_wei” os.mkdir(path1)</p></li></ul><p>结果如下： <img src="https://img-blog.csdnimg.cn/20200817081546633.png" alt="在这里插入图片描述"></p><h4 id="_6-os-makedirs-path" tabindex="-1"><a class="header-anchor" href="#_6-os-makedirs-path" aria-hidden="true">#</a> 6）os.makedirs(path)</h4><ul><li><p>含义：传入一个path路径，生成一个递归的文件夹；</p></li><li><p>注意：如果文件夹存在，就会报错。因此创建文件夹之前，需要使用os.path.exists(path)函数判断文件夹是否存在；</p><p>os.getcwd() path1 = os.getcwd()+“\\huang_wei” os.mkdir(path1)</p></li></ul><p>结果如下： <img src="https://img-blog.csdnimg.cn/20200817082242929.png" alt="在这里插入图片描述"></p><h4 id="_7-os-rmdir-path" tabindex="-1"><a class="header-anchor" href="#_7-os-rmdir-path" aria-hidden="true">#</a> 7）os.rmdir(path)</h4><ul><li><p>含义：传入一个path路径，删除指定路径下的文件夹；</p></li><li><p>注意：该方法只能删除空文件夹，删除非空文件夹会报错；</p><h2 id="path1-os-getcwd-huang-wei-os-rmdir-path1" tabindex="-1"><a class="header-anchor" href="#path1-os-getcwd-huang-wei-os-rmdir-path1" aria-hidden="true">#</a> path1 = os.getcwd()+“\\huang_wei” os.rmdir(path1)</h2><p>path2 = os.getcwd()+“\\a\\b\\c” os.rmdir(path2)</p></li></ul><p>结果如下： <img src="https://img-blog.csdnimg.cn/20200817082606311.png" alt="在这里插入图片描述"></p><h4 id="_8-os-path-join-path1-path2" tabindex="-1"><a class="header-anchor" href="#_8-os-path-join-path1-path2" aria-hidden="true">#</a> 8）os.path.join(path1,path2)</h4><ul><li><p>含义：传入两个path路径，将该路径拼接起来，形成一个新的完整路径；</p><p>path = os.getcwd() lis = [“a.jpg”,“b.jpg”,“c.jpg”] for i in lis: x = os.path.join(path,i) print(x)</p></li></ul><p>结果如下： <img src="https://img-blog.csdnimg.cn/202008170833256.png" alt="在这里插入图片描述"></p><h4 id="_9-os-path-split-path" tabindex="-1"><a class="header-anchor" href="#_9-os-path-split-path" aria-hidden="true">#</a> 9）os.path.split(path)</h4><ul><li><p>含义：传入一个完整的path路径，将其拆分为<code>绝对路径</code>和<code>文件名</code>2部分；</p><p>path1 = r&quot;C:Users黄伟Desktoppublishos模块a.jpg&quot; os.path.split(path1)</p></li></ul><p>结果如下： <img src="https://img-blog.csdnimg.cn/20200817083557423.png" alt="在这里插入图片描述"></p><h4 id="_10-os-path-dirname-path" tabindex="-1"><a class="header-anchor" href="#_10-os-path-dirname-path" aria-hidden="true">#</a> 10）os.path.dirname(path)</h4><ul><li><p>含义：传入一个完整的文件路径，只获取其绝对路径；</p><p>path1 = r&quot;C:Users黄伟Desktoppublishos模块a.jpg&quot; os.path.dirname(path1)</p></li></ul><p>结果如下： <img src="https://img-blog.csdnimg.cn/20200817084000290.png" alt="在这里插入图片描述"></p><h4 id="_11-os-path-basename-path" tabindex="-1"><a class="header-anchor" href="#_11-os-path-basename-path" aria-hidden="true">#</a> 11）os.path.basename(path)</h4><ul><li><p>含义：传入一个完整的文件路径，只获取其文件名；</p><p>path1 = r&quot;C:Users黄伟Desktoppublishos模块a.jpg&quot; os.path.basename(path1)</p></li></ul><p>结果如下： <img src="https://img-blog.csdnimg.cn/20200817084128469.png" alt="在这里插入图片描述"></p><h4 id="_12-os-path-isdir-path" tabindex="-1"><a class="header-anchor" href="#_12-os-path-isdir-path" aria-hidden="true">#</a> 12）os.path.isdir(path)</h4><ul><li><p>含义：传入一个完整的文件路径，判断它是否是文件夹；</p><p>path = os.getcwd() file_list = os.listdir() for file in file_list: if os.path.isdir(file): print(file)</p></li></ul><p>结果如下： <img src="https://img-blog.csdnimg.cn/20200826174731768.png" alt="在这里插入图片描述"></p><h4 id="_13-os-path-isfile-path" tabindex="-1"><a class="header-anchor" href="#_13-os-path-isfile-path" aria-hidden="true">#</a> 13）os.path.isfile(path)</h4><ul><li><p>含义：传入一个完整的文件路径，判断它是否是文件；</p><p>path = os.getcwd() file_list = os.listdir() for file in file_list: if os.path.isfile(file): print(file)</p></li></ul><p>结果如下： <img src="https://img-blog.csdnimg.cn/2020082617485698.png" alt="在这里插入图片描述"></p><h4 id="_14-os-path-sep" tabindex="-1"><a class="header-anchor" href="#_14-os-path-sep" aria-hidden="true">#</a> 14）os.path.sep</h4><ul><li><p>含义：返回当前操作系统的路径分隔符；</p><p>os.path.sep</p></li></ul><p>结果如下： <img src="https://img-blog.csdnimg.cn/2020082617494613.png" alt="在这里插入图片描述"></p><h4 id="_15-os-path-getsize-path" tabindex="-1"><a class="header-anchor" href="#_15-os-path-getsize-path" aria-hidden="true">#</a> 15）os.path.getsize(path)</h4><ul><li><p>含义：传入一个完整的文件路径，返回该文件的大小；</p><p>os.path.getsize(“我创建的压缩包.zip”)</p></li></ul><p>结果如下： <img src="https://img-blog.csdnimg.cn/20200826175354203.png" alt="在这里插入图片描述"></p>`,49),e=[h];function r(d,o){return t(),i("div",null,e)}const c=a(s,[["render",r],["__file","os.html.vue"]]);export{c as default};
