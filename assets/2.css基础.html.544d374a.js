import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,d as n,e as s,b as t,f as p,r as i}from"./app.f66cef50.js";const l={},u=n("h3",{id:"bem-规范",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#bem-规范","aria-hidden":"true"},"#"),s(" BEM 规范")],-1),r=n("p",null,"BEM 规范我觉得放到 css 这个模块讲比较合适",-1),d=n("p",null,"因为有了 BEM，可以让 css 的编码变得有规范可循，使得 css 也变得整洁起来，拥有了很强的可维护性",-1),k={href:"https://juejin.cn/post/7096779382740107300#heading-2",target:"_blank",rel:"noopener noreferrer"},v=p(`<p>BEM 代表 <code>块（block）、元素（element）、修饰符（modifier）</code>，三个部分结合使用，生成一套具有唯一性的 class 命名规范，起到样式隔离，避免 css 样式污染的作用</p><p>如<code>el-input , el-input__inner, el-input--mini</code></p><p><strong>定义 block</strong></p><p>作用：给组件添加统一的<code>el-</code>前缀，通过<code>@content</code>将<code>include{}</code>中传递过来的内容导入到指定位置</p><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code><span class="token variable">@mixin</span> b<span class="token punctuation">(</span><span class="token variable">$block</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token variable">$B</span><span class="token punctuation">:</span> <span class="token variable">$namespace</span><span class="token operator">+</span><span class="token string">&#39;-&#39;</span><span class="token operator">+</span><span class="token variable">$block</span> <span class="token operator">!</span>global<span class="token punctuation">;</span>  <span class="token operator">//</span> 使用el<span class="token operator">-</span>拼接组件名
  <span class="token operator">.</span><span class="token comment">#{$B} {</span>
    <span class="token variable">@content</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>block 示例</strong></p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// 编译前</span>
<span class="token keyword">@include</span> <span class="token function">b</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 编译后</span>
<span class="token selector">.el-button </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>定义 element</strong></p><p><strong>作用：</strong> 1）通过<code>__</code>连接符将父级选择器和传入的子元素拼接起来</p><p>2）通过 hitAllSpecialNestRule 函数判断父级选择器（$selector: &amp;），是否包含<code>--</code> <code>.is-</code> <code>：</code>这三种字符</p><p>3）如果父级选择器包含这几种字符，输出父级选择器包含子元素的嵌套关系</p><div class="language-less line-numbers-mode" data-ext="less"><pre class="language-less"><code><span class="token atrule">@mixin e<span class="token punctuation">(</span>$element<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  $<span class="token property">E</span><span class="token punctuation">:</span> $element !global<span class="token punctuation">;</span>
  $<span class="token property">selector</span><span class="token punctuation">:</span> &amp;<span class="token punctuation">;</span>
  $<span class="token property">currentSelector</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token atrule">@each $unit in $element</span> <span class="token punctuation">{</span> <span class="token comment">// $element传入的值可以单个，也可以是列表</span>
    <span class="token selector">$currentSelector: #</span><span class="token punctuation">{</span>$currentSelector <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> $B <span class="token operator">+</span> $element<span class="token operator">-</span>separator <span class="token operator">+</span> $unit <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token atrule">@if hitAllSpecialNestRule<span class="token punctuation">(</span>$selector<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
    <span class="token atrule">@at-root</span> <span class="token punctuation">{</span>
      <span class="token selector">#</span><span class="token punctuation">{</span>$selector<span class="token punctuation">}</span> <span class="token punctuation">{</span>
        <span class="token selector">#</span><span class="token punctuation">{</span>$currentSelector<span class="token punctuation">}</span> <span class="token punctuation">{</span>
          <span class="token variable">@content</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token atrule">@else</span> <span class="token punctuation">{</span>
    <span class="token atrule">@at-root</span> <span class="token punctuation">{</span>
      <span class="token selector">#</span><span class="token punctuation">{</span>$currentSelector<span class="token punctuation">}</span> <span class="token punctuation">{</span>
        <span class="token variable">@content</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>element 示例</strong></p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// 编译前</span>
<span class="token keyword">@include</span> <span class="token function">b</span><span class="token punctuation">(</span>message-box<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
  <span class="token keyword">@include</span> <span class="token function">m</span><span class="token punctuation">(</span>center<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
    <span class="token keyword">@include</span> <span class="token function">e</span><span class="token punctuation">(</span>header<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token property">padding-top</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 编译后</span>
<span class="token selector">.el-message-box </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.el-message-box--center </span><span class="token punctuation">{</span>
  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.el-message-box--center .el-message-box__header </span><span class="token punctuation">{</span>
  <span class="token property">padding-top</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>定义 modifier(修饰符)</strong></p><p>通过<code>--</code>连接符将父级选择器和传入的修饰符拼接起来</p><div class="language-less line-numbers-mode" data-ext="less"><pre class="language-less"><code><span class="token atrule">@mixin m<span class="token punctuation">(</span>$modifier<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  $<span class="token property">selector</span><span class="token punctuation">:</span> &amp;<span class="token punctuation">;</span>
  $<span class="token property">currentSelector</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token atrule">@each $unit in $modifier</span> <span class="token punctuation">{</span>
    <span class="token selector">$currentSelector: #</span><span class="token punctuation">{</span>$currentSelector <span class="token operator">+</span> &amp; <span class="token operator">+</span> $modifier<span class="token operator">-</span>separator <span class="token operator">+</span> $unit <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token atrule">@at-root</span> <span class="token punctuation">{</span>
    <span class="token selector">#</span><span class="token punctuation">{</span>$currentSelector<span class="token punctuation">}</span> <span class="token punctuation">{</span>
      <span class="token variable">@content</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>modifier 示例</strong></p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// 编译前</span>
<span class="token keyword">@include</span> <span class="token function">b</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token keyword">@include</span> <span class="token function">m</span><span class="token punctuation">(</span>primary<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 编译后</span>
<span class="token selector">.el-button </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.el-button--primary </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过学习 elementUI 这套 BEM 规范，可以应用到自己的项目中，使得 css 编码也规范起来</p><h3 id="var-实现换肤" tabindex="-1"><a class="header-anchor" href="#var-实现换肤" aria-hidden="true">#</a> var() 实现换肤</h3><p>1）通过 css<code>var()</code> 函数，定义颜色变量 2）css 中引入 var 变量 3）需要换肤时，通过 js 修改 body 的颜色变量</p><p><strong>换肤代码示例</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>  <span class="token selector">let style =</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;--color-white&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;#ffffff&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;--color-black&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;#000000&#39;</span>
  <span class="token punctuation">}</span><span class="token selector">;
  for (let i in style)</span> <span class="token punctuation">{</span>
    document.body.style.<span class="token function">setProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> styleVar[i]<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>缺点是兼容性差一些</strong></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/61c64c9821b244a29fd7d34466296f78~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp?" alt="var.png"></p>`,26),m={href:"https://juejin.cn/post/7136936387181281311#heading-2",target:"_blank",rel:"noopener noreferrer"},b=p(`<h3 id="rem-vw-布局" tabindex="-1"><a class="header-anchor" href="#rem-vw-布局" aria-hidden="true">#</a> rem+vw 布局</h3><p><code>rem+vw布局</code>是手机端常见的布局方案</p><h4 id="rem-布局" tabindex="-1"><a class="header-anchor" href="#rem-布局" aria-hidden="true">#</a> rem 布局</h4><p><strong>rem 布局的原理：</strong></p><p>本质是等比缩放，rem 作用于根元素字体大小</p><p>1）假设屏幕宽度为 750px，将屏幕平分为 10 份，1rem=75px，根元素的 fontSize 大小为 75px</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">html</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 75px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token selector">// div</span> <span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 75px<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）利用 js 动态的设置 html 的 font-size</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 设置html的font-size</span>
document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span>
  document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>rem 布局的缺点</strong></p><p>字体并不合适使用 rem, 字体的大小和字体宽度，并不成线性关系，会出现随着屏幕的变大，字体变的越来越大，所以需要结合媒体查询来调整字体大小</p><h4 id="rem-vw-布局-1" tabindex="-1"><a class="header-anchor" href="#rem-vw-布局-1" aria-hidden="true">#</a> rem+vw 布局</h4><p><strong>优势</strong></p><p>1）使用纯 css 的方式来实现，避免使用 js 动态计算 html 根元素 font-size 大小 2）结合使用媒体查询，解决宽屏下（如 ipad）字体过大的问题</p><p><strong>rem+vw 布局的原理</strong></p><p>1）设计稿为 750px 时，rootValue 设置为 75，则屏幕宽为 10rem，1rem=75px，根元素的 fontSize 大小为 75px</p><p>2）屏幕总共有 100vw，所以 1vw 为 7.5px ，10vw 为 75px， 得出 1rem 为 10vw， 故得到根元素的<code>fontSize为10vw</code></p><p><strong>在项目入口文件中引入 flexible.less 中，flexible.less 代码如下</strong></p><div class="language-less line-numbers-mode" data-ext="less"><pre class="language-less"><code><span class="token variable">@base_fontSize<span class="token punctuation">:</span></span> 10vw<span class="token punctuation">;</span>

<span class="token selector">html</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token variable">@base_fontSize</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 使用媒体查询，解决ipad屏幕下（宽屏）字体过大的问题</span>
<span class="token atrule">@media screen and <span class="token punctuation">(</span>min-width<span class="token punctuation">:</span> 560px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">html</span> <span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token variable">@base_fontSize</span> <span class="token operator">*</span> 0.7<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="link-style-import-及三者的区别" tabindex="-1"><a class="header-anchor" href="#link-style-import-及三者的区别" aria-hidden="true">#</a> link style @import 及三者的区别</h3><p><strong>加载顺序的差别</strong></p><p>1）当一个页面被加载的时候，link 引用的 CSS 会同时被加载</p><p>2）而@import 引用的 CSS 会等到页面全部被下载完再被加载</p><p>有时候浏览用@import 加载 CSS 的页面时，可能会出现闪烁的情况</p><p><strong>加载内容的区别</strong></p><p>1）@import 只能导入样式文件 2）link 不仅可以引入样式，还可以引入 js 文件 3）style 标签，它是定义在当前页面的样式</p><h3 id="css3-硬件加速" tabindex="-1"><a class="header-anchor" href="#css3-硬件加速" aria-hidden="true">#</a> CSS3 硬件加速</h3><p>CSS3 硬件加速又叫做 <code>GPU 加速</code>，是利用 GPU 进行渲染，减少 CPU 操作的一种优化方案，可以提升网页的性能</p><p><strong>开启 GPU 硬件加速的属性有：</strong></p><p>1）transform 不为 none 2）opacity 3）filter 4）will-change</p><p><strong>硬件加速的弊端</strong></p><p>GPU 处理过多的内容会导致内存问题； 不在动画结束的时候关闭硬件加速，会出现字体模糊</p>`,32),g={href:"https://link.juejin.cn/?target=https%3A%2F%2Fblog.csdn.net%2Fu010377383%2Farticle%2Fdetails%2F100548769",target:"_blank",rel:"noopener noreferrer"},h={href:"https://link.juejin.cn/?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F404656386",target:"_blank",rel:"noopener noreferrer"},f=p(`<h3 id="css-方面如何减少回流、重绘" tabindex="-1"><a class="header-anchor" href="#css-方面如何减少回流、重绘" aria-hidden="true">#</a> css 方面如何减少回流、重绘</h3><p>1）可以使用 GPU 硬件加速</p><p>2）动画可以使用绝对定位或 fixed，让其脱离文档流，修改动画不造成主界面的影响</p><p>3）使用 visibility 替换 display: none（前者只会引起重绘，后者则会引发回流）</p><p>4）避免使用 table 布局，可能很小的一个小改动会造成整个 table 的重新布局</p><h3 id="移动端实现-1px" tabindex="-1"><a class="header-anchor" href="#移动端实现-1px" aria-hidden="true">#</a> 移动端实现 1px</h3><p><strong>需要兼容不同的设备像素比</strong></p><p>1）<code>device-pixel-ratio</code> 设备像素比 和<code>resolution</code> 分辨率 来区分的不同设备像素比</p><p>2）<code>伪类 + scale缩放</code> 来实现 1px 效果（包括圆角功能）</p><p>如果设备像素比为 1，伪类不缩放 如果设备像素比为 2，伪类缩放为 0.5 如果设备像素比为 3，伪类缩放为 0.33</p><p><strong>示例</strong></p><div class="language-less line-numbers-mode" data-ext="less"><pre class="language-less"><code><span class="token comment">// 使用scss语法实现</span>
<span class="token atrule">@mixin side-parse<span class="token punctuation">(</span>$color, $border<span class="token punctuation">:</span>1px, $side<span class="token punctuation">:</span>all, $radius<span class="token punctuation">:</span>0, $style<span class="token punctuation">:</span> solid<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token atrule">@if <span class="token punctuation">(</span>$side == all<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span>$border $style $color<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token atrule">@else</span> <span class="token punctuation">{</span>
    <span class="token selector">border-#</span><span class="token punctuation">{</span>$side<span class="token punctuation">}</span><span class="token punctuation">:</span>$border $style $color<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token atrule">@mixin border-s1px<span class="token punctuation">(</span>$color, $border<span class="token punctuation">:</span>1px, $side<span class="token punctuation">:</span>all, $radius<span class="token punctuation">:</span>0, $style<span class="token punctuation">:</span> solid, $radius<span class="token punctuation">:</span> 0<span class="token punctuation">)</span></span><span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
  <span class="token selector">&amp;::after</span><span class="token punctuation">{</span>
    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
    <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">border-radius</span><span class="token punctuation">:</span> $radius<span class="token punctuation">;</span>
    <span class="token variable">@include</span> <span class="token function">side-parse</span><span class="token punctuation">(</span>$color<span class="token punctuation">,</span> $border<span class="token punctuation">,</span> $side<span class="token punctuation">,</span> $radius<span class="token punctuation">,</span> $style<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token property">-webkit-box-sizing</span><span class="token punctuation">:</span> border<span class="token operator">-</span>box<span class="token punctuation">;</span>
    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border<span class="token operator">-</span>box<span class="token punctuation">;</span>
    <span class="token property">-webkit-transform-origin</span><span class="token punctuation">:</span> 0 0<span class="token punctuation">;</span>
    <span class="token property">transform-origin</span><span class="token punctuation">:</span> 0 0<span class="token punctuation">;</span>  <span class="token comment">// 默认值为50% 50%</span>
    <span class="token atrule">@media <span class="token punctuation">(</span>max--moz-device-pixel-ratio<span class="token punctuation">:</span> 1.49<span class="token punctuation">)</span>, <span class="token punctuation">(</span>-webkit-max-device-pixel-ratio<span class="token punctuation">:</span> 1.49<span class="token punctuation">)</span>, <span class="token punctuation">(</span>max-device-pixel-ratio<span class="token punctuation">:</span> 1.49<span class="token punctuation">)</span>, <span class="token punctuation">(</span>max-resolution<span class="token punctuation">:</span> 143dpi<span class="token punctuation">)</span>, <span class="token punctuation">(</span>max-resolution<span class="token punctuation">:</span> 1.49dppx<span class="token punctuation">)</span></span><span class="token punctuation">{</span>
      <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
      <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
      <span class="token property">border-radius</span><span class="token punctuation">:</span> $radius<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token atrule">@media <span class="token punctuation">(</span>min--moz-device-pixel-ratio<span class="token punctuation">:</span> 1.5<span class="token punctuation">)</span> and <span class="token punctuation">(</span>max--moz-device-pixel-ratio<span class="token punctuation">:</span> 2.49<span class="token punctuation">)</span>, <span class="token punctuation">(</span>-webkit-min-device-pixel-ratio<span class="token punctuation">:</span> 1.5<span class="token punctuation">)</span> and <span class="token punctuation">(</span>-webkit-max-device-pixel-ratio<span class="token punctuation">:</span> 2.49<span class="token punctuation">)</span>,<span class="token punctuation">(</span>min-device-pixel-ratio<span class="token punctuation">:</span> 1.5<span class="token punctuation">)</span> and <span class="token punctuation">(</span>max-device-pixel-ratio<span class="token punctuation">:</span> 2.49<span class="token punctuation">)</span>,<span class="token punctuation">(</span>min-resolution<span class="token punctuation">:</span> 144dpi<span class="token punctuation">)</span> and <span class="token punctuation">(</span>max-resolution<span class="token punctuation">:</span> 239dpi<span class="token punctuation">)</span>,<span class="token punctuation">(</span>min-resolution<span class="token punctuation">:</span> 1.5dppx<span class="token punctuation">)</span> and <span class="token punctuation">(</span>max-resolution<span class="token punctuation">:</span> 2.49dppx<span class="token punctuation">)</span></span><span class="token punctuation">{</span>
      <span class="token property">width</span><span class="token punctuation">:</span> 200%<span class="token punctuation">;</span>
      <span class="token property">height</span><span class="token punctuation">:</span> 200%<span class="token punctuation">;</span>
      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>.5<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>.5<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token property">border-radius</span><span class="token punctuation">:</span> $radius <span class="token operator">*</span> 2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token atrule">@media <span class="token punctuation">(</span>min--moz-device-pixel-ratio<span class="token punctuation">:</span> 2.5<span class="token punctuation">)</span>, <span class="token punctuation">(</span>-webkit-min-device-pixel-ratio<span class="token punctuation">:</span> 2.5<span class="token punctuation">)</span>,<span class="token punctuation">(</span>min-device-pixel-ratio<span class="token punctuation">:</span> 2.5<span class="token punctuation">)</span>, <span class="token punctuation">(</span>min-resolution<span class="token punctuation">:</span> 240dpi<span class="token punctuation">)</span>,<span class="token punctuation">(</span>min-resolution<span class="token punctuation">:</span> 2.5dppx<span class="token punctuation">)</span></span><span class="token punctuation">{</span>
      <span class="token property">width</span><span class="token punctuation">:</span> 300%<span class="token punctuation">;</span>
      <span class="token property">height</span><span class="token punctuation">:</span> 300%<span class="token punctuation">;</span>
      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.333<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.333<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token property">border-radius</span><span class="token punctuation">:</span> $radius <span class="token operator">*</span> 3<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bfc-块级格式化上下文" tabindex="-1"><a class="header-anchor" href="#bfc-块级格式化上下文" aria-hidden="true">#</a> BFC 块级格式化上下文</h3><p><strong>BFC 解决哪些问题</strong></p><p>1）清除浮动，解决父元素高度塌陷 2）外边距重叠</p><p><strong>创建 BFC 的 4 种方式</strong></p><p>1）float 属性不为 none 2）position 为 absolute 或 fixed 3）display 为 inline-block、table-cell、table-caption、flex、inline-flex 4）overflow 不为 visible</p><p><strong>最常用是 overflow 为 hidden，这种方式的副作用最小，其他三种方式的副作用较大</strong></p>`,18),x={href:"https://link.juejin.cn/?target=https%3A%2F%2Fwww.cnblogs.com%2Flibin-1%2Fp%2F7098468.html",target:"_blank",rel:"noopener noreferrer"},y=n("h3",{id:"sticky-粘性布局",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sticky-粘性布局","aria-hidden":"true"},"#"),s(" sticky 粘性布局")],-1),_=n("p",null,"当元素在屏幕内，表现为 relative，当就要滚出屏幕的时候，表现为 fixed",-1),$=n("p",null,[s("随着页面的滚动，将元素固定在设置的位置（固定效果如同 fixed），"),n("code",null,"position:sticky"),s("可以看作是 position:relative 和 position:fixed 的结合体")],-1),w=n("p",null,[n("img",{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ed3d9d8e61cb4aa7939d229b7e600757~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp?",alt:"sticky.gif"})],-1),q=n("p",null,[n("strong",null,"以下情况粘性布局会失效")],-1),S=n("p",null,"1）父元素设置 overflow：hidden 2）父元素高度不够或者高度为内部元素高度之和（总之没有剩余的高度，不会产生滚动）",-1),j={href:"https://link.juejin.cn/?target=https%3A%2F%2Fwww.zhangxinxu.com%2Fwordpress%2F2018%2F12%2Fcss-position-sticky%2F",target:"_blank",rel:"noopener noreferrer"},F=p(`<h3 id="animation-动画" tabindex="-1"><a class="header-anchor" href="#animation-动画" aria-hidden="true">#</a> animation 动画</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>animation：动画名称 + 动画时间 + 速度曲线 + 是否延迟 + 动画次数 + 是否逆向播放
// linear 线性的  infinite 无穷的   alternate 逆向的
animation: mymove 2s linear infinite alternate;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实现不间断播报</strong></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4a491769cb6544828e318f4d24fa0f87~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp?" alt="animation.gif"></p><p>利用 translate，修改内容在父元素中 y 轴的位置，来实现不间断播报效果</p><p>为了保证广播滚动效果的连贯性，防止滚动到最后一帧时没有内容，<strong>需要多添加一条重复数据进行填充</strong></p><p>translate 设置的高度为列表的总高度（不包含最后一条插入的数据）</p><p><strong>示例</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ul<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>li<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>小王同学加入了凹凸实验室<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>li<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>小李同学加入了凹凸实验室<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>li<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>小赵同学加入了凹凸实验室<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>li<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>小马同学加入了凹凸实验室<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- 重复插入第一条数据 --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>li<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>小王同学加入了凹凸实验室<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">.container</span> <span class="token punctuation">{</span>
      <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
      <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
      <span class="token property">background-color</span><span class="token punctuation">:</span> #256def<span class="token punctuation">;</span>
      <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>
      <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
      <span class="token property">border-radius</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
      <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">.ul</span><span class="token punctuation">{</span>
      <span class="token property">animation</span><span class="token punctuation">:</span> scroll 5s linear infinite<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">.li</span><span class="token punctuation">{</span>
      <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
      <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token atrule"><span class="token rule">@keyframes</span> scroll</span> <span class="token punctuation">{</span>
    <span class="token selector">0%</span> <span class="token punctuation">{</span>
       <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token selector">100%</span> <span class="token punctuation">{</span>
      <span class="token comment">/* 120 = 4*30 不包含最后一条数据的总高度*/</span>
      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>-120px<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),z={href:"https://juejin.cn/post/6889226357851553805",target:"_blank",rel:"noopener noreferrer"};function B(C,E){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,r,d,n("p",null,[s("这里以"),n("a",k,[s("elementUI 的 BEM 规范"),t(a)]),s("为例")]),v,n("p",null,[n("a",m,[s("换肤方案有哪些？"),t(a)])]),b,n("p",null,[n("a",g,[s("CSS 动画开启硬件加速"),t(a)]),n("a",h,[s("这一次，彻底搞懂 GPU 和 css 硬件加速"),t(a)])]),f,n("p",null,[n("a",x,[s("什么是 BFC"),t(a)])]),y,_,$,w,q,S,n("p",null,[n("a",j,[s("杀了个回马枪，还是说说 position:sticky 吧"),t(a)])]),F,n("p",null,[n("a",z,[s("你可能不知道的 Animation 动画技巧与细节"),t(a)])])])}const A=e(l,[["render",B],["__file","2.css基础.html.vue"]]);export{A as default};
